#!/usr/bin/env python
import sys
import os
import urllib2
#import httplib2
import commands
import shutil
import fnmatch
import codecs
import urlparse
import string
import glob
import re

print 'sphinx-cook processing... "', sys.argv[1], '"'

rootPath = os.path.abspath(sys.argv[1])

print 'root path: ', rootPath

os.chdir(rootPath)


images = []

imageLocalPattern = re.compile('^[a-zA-Z0-9\-\_]+\.(gif|png|jpg|jpeg|tiff|eps)$', re.IGNORECASE)

for rstPath in glob.glob('*.rst'):
	lines = codecs.open(rstPath, 'r', 'utf-8').readlines()
	for line in lines:
		if line[:10] == '   @image:':
			idx = line.find(':')
			tokens = line[idx+2:len(line)-1].split(' ')
			if len(tokens) == 2:
				remote = tokens[0].strip()
				local = tokens[1].strip()
				if imageLocalPattern.match(local):
					images.append( [remote, local] )

if len(images) > 0:
	for img in images:
		print 'download: ', img[0]
		try:
			headers = { 'User-Agent' : 'Mozilla/5.0' }
			request = urllib2.Request(img[0], None, headers)
			response = urllib2.urlopen(request)
			localFile = open(img[1], 'w')
			localFile.write(response.read())
			localFile.close()
			print 'saved.'
		except:
			print 'skipped.'

print "Download required files..."

if not os.path.exists('/tmp/sphinx-cook'):
	os.mkdir('/tmp/sphinx-cook')

if not os.path.exists('/tmp/sphinx-cook/conf.py'):
	remotefile = urllib2.urlopen('https://github.com/contpub/sphinx-cook/raw/master/toolkit/conf.py')
	localFile = open('/tmp/sphinx-cook/conf.py', 'w')
	localFile.write(remotefile.read())
	localFile.close()

if not os.path.exists('/tmp/sphinx-cook/Makefile'):
	remotefile = urllib2.urlopen('https://github.com/contpub/sphinx-cook/raw/master/toolkit/Makefile')
	localFile = open('/tmp/sphinx-cook/Makefile', 'w')
	localFile.write(remotefile.read())
	localFile.close()

shutil.copy('/tmp/sphinx-cook/conf.py', '.')
shutil.copy('/tmp/sphinx-cook/Makefile', '.')

# Build

print "sphinx building..."
commands.getstatusoutput('make epub')
commands.getstatusoutput('make latexpdf')

if not os.path.exists('cook'):
	os.mkdir('cook')

import os

for root, dirnames, filenames in os.walk('_build/latex'):
	for filename in fnmatch.filter(filenames, '*.pdf'):
		if not filename.startswith('graphviz'):
			shutil.copy(os.path.join(root, filename), 'cook')

for root, dirnames, filenames in os.walk('_build/epub'):
	for filename in fnmatch.filter(filenames, '*.epub'):
		shutil.copy(os.path.join(root, filename), 'cook')

commands.getstatusoutput('make clean')

shutil.rmtree('_build')
os.remove('conf.py')
os.remove('Makefile')

